name: Create PR with Commit List

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main    # main 브랜치로의 PR 생성 및 커밋 추가 시 실행

jobs:
  update-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0  # 전체 히스토리를 가져와서 커밋 비교 가능

      - name: Get commit list and PR info
        id: pr-info
        run: |
          # 기본 브랜치 (main)와 비교하여 커밋 목록 가져오기
          BASE_BRANCH="main"
          CURRENT_BRANCH="${{ github.head_ref }}"

          # 원격 브랜치 정보 가져오기
          git fetch origin ${BASE_BRANCH}:${BASE_BRANCH} || git fetch origin ${BASE_BRANCH}

          # 브랜치 이름에서 PR 제목 생성
          PR_TITLE="feat: ${CURRENT_BRANCH}"

          # 커밋 목록 가져오기 (main 브랜치와 차이점)
          echo "# 📝 변경사항" > pr_body.md
          echo "" >> pr_body.md
          echo "## 🔄 포함된 커밋" >> pr_body.md
          echo "" >> pr_body.md

          # 커밋 목록을 마크다운 형식으로 생성
          if git rev-list --count origin/${BASE_BRANCH}..HEAD > /dev/null 2>&1; then
            git log origin/${BASE_BRANCH}..HEAD --pretty=format:"- %s (%an, %cr)" --reverse >> pr_body.md
            COMMIT_COUNT=$(git rev-list --count origin/${BASE_BRANCH}..HEAD)
          else
            echo "- 커밋 비교를 할 수 없습니다. (첫 번째 커밋이거나 브랜치 정보가 없음)" >> pr_body.md
            COMMIT_COUNT=0
          fi
          echo "" >> pr_body.md
          echo "" >> pr_body.md

          # 요약
          echo "## 📊 요약" >> pr_body.md
          echo "- 총 ${COMMIT_COUNT}개의 커밋" >> pr_body.md
          echo "- 기본 브랜치: \`${BASE_BRANCH}\`" >> pr_body.md
          echo "- 작업 브랜치: \`${CURRENT_BRANCH}\`" >> pr_body.md
          echo "" >> pr_body.md

          # 변경된 파일 목록
          echo "## 📁 변경된 파일" >> pr_body.md
          echo "" >> pr_body.md
          if git diff --name-only origin/${BASE_BRANCH}..HEAD > /dev/null 2>&1; then
            git diff --name-only origin/${BASE_BRANCH}..HEAD | sed 's/^/- /' >> pr_body.md
          else
            echo "- 파일 차이점을 확인할 수 없습니다." >> pr_body.md
          fi
          echo "" >> pr_body.md

          # 자동 생성 표시
          echo "---" >> pr_body.md
          echo "🤖 이 PR은 GitHub Actions에 의해 자동으로 생성되었습니다." >> pr_body.md

          # GitHub Output으로 설정
          echo "pr-title=${PR_TITLE}" >> $GITHUB_OUTPUT
          echo "base-branch=${BASE_BRANCH}" >> $GITHUB_OUTPUT
          echo "commit-count=${COMMIT_COUNT}" >> $GITHUB_OUTPUT

      - name: Update PR body
        run: |
          gh pr edit ${{ github.event.number }} --body-file pr_body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR update
        run: |
          echo "✅ PR 본문이 업데이트되었습니다!"
          echo "📊 총 ${{ steps.pr-info.outputs.commit-count }}개의 커밋이 포함되어 있습니다."